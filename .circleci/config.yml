# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      # Python
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements_devel.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_devel.txt
            pip install wger
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements_devel.txt" }}

      # Javascript (JS)
      - run:
          name: install node
          command: 'sudo apt-get update && sudo apt-get install -y nodejs nodejs-legacy npm libjpeg62-turbo-dev zlib1g-dev'
      # Cache
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      # Set everything up
      - run:
          name: create settings
          command: |
            . venv/bin/activate
            wger create_settings --settings-path `pwd`/wger/settings.py --database-path `pwd`/database.sqlite
      - run:
          name: invoke settings
          command: |
            . venv/bin/activate
            invoke bootstrap_wger --settings-path `pwd`/wger/settings.py --no-start-server

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            coverage run --source='.' ./manage.py test --settings=wger.settings
